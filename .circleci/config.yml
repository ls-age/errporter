defaults: &defaults
  docker:
    - image: circleci/node:17

git-login: &git-login
  name: Setting up git user
  command: git config --global user.email ci@ls-age.com && git config --global user.name "ls-age CI"

npm-login: &npm-login
  name: Logging in to npm
  command: echo "$NPM_TOKEN" > ~/.npmrc

version: 2
jobs:
  # General jobs
  install-deps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Installing npm dependencies
          command: npm ci
      - save_cache:
          key: v1-npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint-source:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Linting source files
          command: npm run lint

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Bundle app
          command: npm run compile
      - persist_to_workspace:
          root: .
          paths:
            - out

  types:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Check types
          command: npm run types
      - persist_to_workspace:
          root: .
          paths:
            - out/types

  deploy:
    <<: *defaults
    steps:
      - checkout
      - add_ssh_keys
      - attach_workspace:
          at: .
      - run:
          <<: *git-login
      - run:
          <<: *npm-login
      - run:
          name: Deploying changes
          command:
            npx @ls-age/bump-version release --gh-token $RELEASE_GITHUB_TOKEN

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - install-deps
      - lint-source:
          requires:
            - install-deps
      - build:
          requires:
            - install-deps
      - types:
          requires:
            - install-deps
      - deploy:
          requires:
            - lint-source
            - build
            - types
          filters:
            branches:
              only:
                - master
                - beta
